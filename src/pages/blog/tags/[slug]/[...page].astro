---
import { slug } from 'github-slugger'
import type { CollectionEntry } from 'astro:content'
import type { GetStaticPathsOptions, Page } from 'astro'

import Base from '@src/layouts/Base.astro'
import BlogLoop from '@src/components/blog/Loop.astro'
import Pagination from '@src/components/Pagination.astro'

import { SITE } from '@src/consts'
import { getAllPosts } from '@src/utils/posts'

interface Props {
  current: Record<string, string>
	page: Page<CollectionEntry<'blog'>>
}

export async function getStaticPaths (
	{ paginate }: GetStaticPathsOptions
) {
  const posts = await getAllPosts()
  const tags = [...new Set(posts.flatMap(
    ({ data }) => data.tags || []
  ).filter(Boolean))].map((tag: string) => ({
    href: `/blog/tags/${slug(tag)}`,
    name: tag,
  }))

  return tags.flatMap((tag) => paginate(posts.filter(
    ({ data }) => data.tags.includes(tag.name)
  ), {
      params: { slug: slug(tag.name) },
      props: { current: tag, },
      pageSize: SITE.PER_PAGE
    }
  ))
}

const { current, page } = Astro.props
const title = `Tagged: ${current.name}`
const description = `Listing of all posts tagged with "${current.name}"`
const base = import.meta.env.BASE_URL
---

<Base {title} {description}>
	<header slot="before-breadcrumbs"><h1>{title}</h1></header>
	<BlogLoop posts={page.data} />
  <p><a href={`${base}/blog/tags`}>View All Tags</a></p>
	<Pagination {page} />
</Base>

<style>
	header {
		padding: 24px 16px;
	}
	header h1 {
		line-height: 1;
		margin: 0;
	}
</style>
