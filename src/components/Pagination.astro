---
import type { Page } from 'astro'
import type { HTMLAttributes } from 'astro/types'
import type { CollectionEntry } from 'astro:content'

interface Props extends HTMLAttributes<'nav'> {
	page: Page<CollectionEntry<'blog'>>
}

const { page, ...attrs } = Astro.props
---

<nav aria-labelledby="pagination-label pagination-page" {...attrs}>
  <h2 class="sr-only" id="pagination-label">Pagination</h2>
  <ul role="list">
    {page.url.prev && (
      <li class="pagination__prev" role="listitem">
        <a href={page.url.prev}>
          <span>Previous</span>
          <span>Page {page.currentPage - 1}</span>
        </a>
      </li>
    )}
    <li class="pagination__current" role="listitem">
      <span id="pagination-page" aria-current="page">
        Page <b>{page.currentPage}</b> of <i>{page.lastPage}</i>
      </span>
    </li>
    {page.url.next && (
      <li class="pagination__next" role="listitem">
        <a href={page.url.next}>
          <span>Next</span>
          <span>Page {page.currentPage + 1}</span>
        </a>
      </li>
    )}
  </ul>
</nav>

<style>
  nav:not(:last-child) {
    margin-block-end: 24px;
  }
  ul {
    display: grid;
    gap: 16px;
    grid-template-columns: 1fr auto 1fr;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .pagination__prev {
    grid-column: 1 / 2;
    text-align: start;
  }
  .pagination__current {
    align-self: center;
    grid-column: 2 / 3;
    text-align: center;
  }
  .pagination__next {
    grid-column: 3 / 4;
    text-align: end;
  }
  a, a > span {
    display: block;
    text-decoration: none;
  }
  a > span:first-of-type {
    color: var(--text-color-mid);
    font-size: 1.25em;
  }
  .pagination__current b {
    color: var(--text-color-mid);
    font-weight: 800;
  }
</style>
