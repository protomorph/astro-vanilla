---
import { Picture } from 'astro:assets'

import ReadableDate from '@src/components/blog/Date.astro'

import { readingTime } from '@src/utils/blog'
import { permalink } from '@src/utils/permalink'
import type { TaggedItem, PostCollectionEntry } from '@src/utils/blog'

interface Props {
	posts: PostCollectionEntry[]
  title?: string
}

const { posts, title } = Astro.props
---

<section>
  {title && <h2>{title}</h2>}
  <ul role="list">
    {posts.map(({ body, data, id }) => (
      <li role="listitem">
        <a href={permalink.blog(id)}>
          {data.heroImage && (
            <Picture
              src={data.heroImage} height={360} width={720}
              alt="" loading={null} formats={['jpg']}
            />
          )}
          <h4 class="title">{data.title}</h4>
          <p class="description">{data.description}</p>
          <p class="date"><ReadableDate date={data.pubDate} /></p>
          <p class="reading-time">{readingTime(body)}</p>
        </a>
        <div class="tags">
          {data.tagged?.map((tag: TaggedItem) => (
            <a href={tag.href}>#{tag.name}</a>
          ))}
        </div>
      </li>
    ))}
  </ul>
</section>

<style>
  section:not(:last-child) {
    margin-block-end: 24px;
  }
  section > h2 {
    text-align: center;
  }
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  li:not(:last-child) {
    border-block-end: 1px solid transparent;
    border-image: linear-gradient(90deg, transparent, var(--text-color-mute), transparent) 1;
    padding-block-end: 16px;
  }
  li + li {
    margin-block-start: 24px;
  }
  li > a, img {
    border-radius: 12px;
  }
  li > a, .tags {
    display: flex;
    justify-content: center;
  }
  a {
    flex-direction: column;
    text-align: center;
    text-decoration: none;
  }
  .title {
    color: var(--text-color);
    font-size: 2rem;
    font-weight: 900;
    letter-spacing: .025em;
		line-height: 1.1;
		margin: .375em 0 .25em;
  }
  .description {
    color: var(--text-color-mid);
    font-size: 1.125rem;
		line-height: 1.3;
    margin: 0 0 .5em 0;
  }
	.date {
    color: var(--text-color-mute);
		margin: 0 0 .25em 0;
	}
  .reading-time {
    color: var(--text-color-mid);
    font-size: .875rem;
		margin: 0 0 .25em 0;
  }
  :where(.title, .description, .date, .reading-time) {
    transition: color 128ms ease-in-out;
  }
  a:where(:hover, :focus) :where(.title, .description, .date, .reading-time) {
    color: var(--accent);
  }
  .tags {
    flex-wrap: wrap;
    gap: 1em;
  }
  .tags a {
    font-weight: 700;
  }
</style>
